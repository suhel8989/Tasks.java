import java.util.Scanner;
import java.util.Random;

public class TicTacToe {
    static char[][] board = new char[3][3];
    static Scanner scanner = new Scanner(System.in);
    static Random random = new Random();

    public static void main(String[] args) {
        boolean playAgain;

        do {
            resetBoard();
            playGame();
            System.out.print("Play again? (yes/no): ");
            playAgain = scanner.next().equalsIgnoreCase("yes");
        } while (playAgain);
    }

    static void resetBoard() {
        for (int i = 0; i < 3; i++)
            for (int j = 0; j < 3; j++)
                board[i][j] = ' ';
    }

    static void playGame() {
        boolean playerTurn = true;

        while (true) {
            printBoard();
            if (playerTurn) {
                playerMove();
            } else {
                computerMove();
            }

            char symbol = playerTurn ? 'X' : 'O';
            if (checkWinner(symbol)) {
                printBoard();
                System.out.println((playerTurn ? "Player" : "Computer") + " wins!");
                break;
            }

            if (isBoardFull()) {
                printBoard();
                System.out.println("It's a draw!");
                break;
            }

            playerTurn = !playerTurn;
        }
    }

    static void printBoard() {
        System.out.println("-------------");
        for (int i = 0; i < 3; i++) {
            System.out.print("| ");
            for (int j = 0; j < 3; j++) {
                System.out.print(board[i][j] + " | ");
            }
            System.out.println("\n-------------");
        }
    }

    static void playerMove() {
        int row, col;
        while (true) {
            System.out.print("Enter row and column (1-3 each): ");
            try {
                row = scanner.nextInt() - 1;
                col = scanner.nextInt() - 1;

                if (isValidMove(row, col)) {
                    board[row][col] = 'X';
                    break;
                } else {
                    System.out.println("Invalid move. Try again.");
                }
            } catch (Exception e) {
                System.out.println("Invalid input. Enter two numbers.");
                scanner.nextLine(); // Clear buffer
            }
        }
    }

    static void computerMove() {
        int row, col;
        do {
            row = random.nextInt(3);
            col = random.nextInt(3);
        } while (!isValidMove(row, col));

        board[row][col] = 'O';
        System.out.println("Computer chose: " + (row + 1) + " " + (col + 1));
    }

    static boolean isValidMove(int row, int col) {
        return row >= 0 && row < 3 && col >= 0 && col < 3 && board[row][col] == ' ';
    }

    static boolean checkWinner(char symbol) {
        for (int i = 0; i < 3; i++) {
            if (board[i][0] == symbol && board[i][1] == symbol && board[i][2] == symbol)
                return true;
            if (board[0][i] == symbol && board[1][i] == symbol && board[2][i] == symbol)
                return true;
        }
        if (board[0][0] == symbol && board[1][1] == symbol && board[2][2] == symbol)
            return true;
        if (board[0][2] == symbol && board[1][1] == symbol && board[2][0] == symbol)
            return true;

        return false;
    }

    static boolean isBoardFull() {
        for (int i = 0; i < 3; i++)
            for (int j = 0; j < 3; j++)
                if (board[i][j] == ' ')
                    return false;
        return true;
    }
}